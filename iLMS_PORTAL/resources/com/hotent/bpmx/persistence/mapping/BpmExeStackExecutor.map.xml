<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotent.bpmx.persistence.model.BpmExeStackExecutor">
	<resultMap id="BpmExeStackExecutor" type="com.hotent.bpmx.persistence.model.BpmExeStackExecutor">
		<id property="id" column="ID_" jdbcType="VARCHAR"/>
		<result property="stackId" column="STACK_ID_" jdbcType="VARCHAR"/>
		<result property="taskId" column="TASK_ID_" jdbcType="VARCHAR"/>
		<result property="assigneeId" column="ASSIGNEE_ID_" jdbcType="VARCHAR"/>
		<result property="createTime" column="CREATE_TIME_" jdbcType="TIMESTAMP"/>
		<result property="endTime" column="END_TIME_" jdbcType="TIMESTAMP"/>
		<result property="status" column="STATUS_" jdbcType="NUMERIC"/>
	</resultMap>
	
	<insert id="create" parameterType="com.hotent.bpmx.persistence.model.BpmExeStackExecutor">
		INSERT INTO bpm_exe_stack_executor
		(ID_,STACK_ID_,TASK_ID_,ASSIGNEE_ID_,CREATE_TIME_,END_TIME_,STATUS_)
		VALUES 
		(#{id,jdbcType=VARCHAR}, #{stackId,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, 
		#{assigneeId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
		#{status,jdbcType=NUMERIC})
	</insert>
	
	<select id="get"   parameterType="java.lang.String" resultMap="BpmExeStackExecutor">
		SELECT * FROM bpm_exe_stack_executor 
		WHERE 
		ID_=#{id}
	</select>
	
	<select id="query" parameterType="java.util.Map" resultMap="BpmExeStackExecutor">
		SELECT * FROM bpm_exe_stack_executor
		<where>
			<if test="whereSql!=null">
				${whereSql}
			</if>
		</where>
		<if test="orderBySql!=null">
			ORDER BY ${orderBySql}
		</if>
		<if test="orderBySql==null">
			ORDER BY ID_ DESC
		</if>
	</select>
	
	<update id="update" parameterType="com.hotent.bpmx.persistence.model.BpmExeStackExecutor">
		UPDATE bpm_exe_stack_executor SET
		STACK_ID_=#{stackId,jdbcType=VARCHAR},
		TASK_ID_=#{taskId,jdbcType=VARCHAR},
		ASSIGNEE_ID_=#{assigneeId,jdbcType=VARCHAR},
		CREATE_TIME_=#{createTime,jdbcType=TIMESTAMP},
		END_TIME_=#{endTime,jdbcType=TIMESTAMP},
		STATUS_=#{status,jdbcType=NUMERIC}
		WHERE
		ID_=#{id}
	</update>
	
	<delete id="remove" parameterType="java.lang.String">
		DELETE FROM bpm_exe_stack_executor 
		WHERE
		ID_=#{id}
	</delete>
	
	
	<select id="getByTaskId"   parameterType="java.lang.String" resultMap="BpmExeStackExecutor">
		SELECT * FROM bpm_exe_stack_executor 
		WHERE 
		TASK_ID_=#{taskId}
	</select>
	
	<select id="getByStackId"   parameterType="java.lang.String" resultMap="BpmExeStackExecutor">
		SELECT * FROM bpm_exe_stack_executor 
		WHERE 
		STACK_ID_=#{stackId}
	</select>
	
	<delete id="deleteByStackId" parameterType="java.lang.String">
		DELETE FROM bpm_exe_stack_executor 
		WHERE
		STACK_ID_=#{stackId}
	</delete>
	
	<delete id="deleteByStackIds" parameterType="java.util.Map">
		DELETE FROM bpm_exe_stack_executor 
		WHERE STACK_ID_ in
		<foreach open="("  close=")" collection="stackIds" item="stackId" separator=",">#{stackId}</foreach>
	</delete>
	
</mapper>