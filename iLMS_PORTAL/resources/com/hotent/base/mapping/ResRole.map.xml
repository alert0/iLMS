<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotent.base.persistence.model.ResRole">
	<resultMap id="ResRole" type="com.hotent.base.persistence.model.ResRole">
		<id property="id" column="ID_" jdbcType="VARCHAR"/>
		<result property="systemId" column="SYSTEM_ID_" jdbcType="VARCHAR"/>
		<result property="resId" column="RES_ID_" jdbcType="VARCHAR"/>
		<result property="roleId" column="ROLE_ID_" jdbcType="VARCHAR"/>
		<result property="roleAlias" column="roleAlias" jdbcType="VARCHAR"/>
		<result property="url" column="url" jdbcType="VARCHAR"/>
		<result property="resAlias" column="resAlias" jdbcType="VARCHAR"/>
	</resultMap>
	
	
	
	<insert id="create" parameterType="com.hotent.base.persistence.model.ResRole">
		INSERT INTO base_res_role
		(ID_,SYSTEM_ID_,RES_ID_,ROLE_ID_)
		VALUES 
		(#{id,jdbcType=VARCHAR}, #{systemId,jdbcType=VARCHAR}, #{resId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR})
	</insert>
	
	<select id="get"   parameterType="java.lang.String" resultMap="ResRole">
		SELECT * FROM base_res_role 
		WHERE 
		ID_=#{id}
	</select>
	
	<select id="getByRoleId"   parameterType="java.lang.String" resultMap="ResRole">
		SELECT * FROM base_res_role 
		WHERE 
		ROLE_ID_=#{roleId}
	</select>
	
	<select id="query" parameterType="java.util.Map" resultMap="ResRole">
		SELECT * FROM base_res_role
		<where>
			<if test="whereSql!=null">
				${whereSql}
			</if>
		</where>
		<if test="orderBySql!=null">
			ORDER BY ${orderBySql}
		</if>
		<if test="orderBySql==null">
			ORDER BY ID_ DESC
		</if>
	</select>
	
	<update id="update" parameterType="com.hotent.base.persistence.model.ResRole">
		UPDATE base_res_role SET
		SYSTEM_ID_=#{systemId,jdbcType=VARCHAR},
		RES_ID_=#{resId,jdbcType=VARCHAR},
		ROLE_ID_=#{roleId,jdbcType=VARCHAR}
		WHERE
		ID_=#{id}
	</update>
	
	<delete id="remove" parameterType="java.lang.String">
		DELETE FROM base_res_role 
		WHERE
		ID_=#{id}
	</delete>
	
	<delete id="removeByRoldeId"   parameterType="java.util.Map">
		DELETE FROM base_res_role
		<where>
			<if test="@Ognl@isNotEmpty(roleId)">
				ROLE_ID_ = #{roleId}
			</if>
			<if test="@Ognl@isNotEmpty(systemId)">
				AND SYSTEM_ID_ = #{systemId}
			</if>
		</where>
	</delete>
	
	<select id="getResRoleBySystemId"   parameterType="java.lang.String" resultMap="ResRole">
		select a.ALIAS_ resAlias,c.alias_ roleAlias,a.default_url_ url from base_sys_resource a left join  base_res_role b
		on a.ID_=b.RES_ID_ left join sys_role c on   b.ROLE_ID_=c.id_ and   c.enabled_=1 	where a.SYSTEM_ID_=#{systemId}
	</select>
	
	<select id="getUrlRoleBySystemId"   parameterType="java.lang.String" resultMap="ResRole">
		select a.RES_URL_ url,c.alias_ roleAlias from base_sys_resource r join  base_rel_resources a  
		on r.ID_=a.RES_ID_ left JOIN base_res_role b
		on a.RES_ID_=b.RES_ID_    LEFT JOIN sys_role c on b.ROLE_ID_=c.id_ and c.enabled_=1
		where r.SYSTEM_ID_=#{systemId}
	</select>
	
	
</mapper>