<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanthink.sw.model.SwDemandForecastModel">

	<!-- 分页查询数据 -->
     <select id="queryJisoDemandPage" parameterType="com.hanthink.sw.model.SwDemandForecastModel" resultType="com.hanthink.sw.model.SwDemandForecastModel">
				SELECT A.ID				   id,
					   A.VERSION           version,
		               pd.code_value_name  PHASE,
		               A.FACTORY_CODE      factoryCode,
		               A.UNLOAD_PORT       unloadPort,
		               A.SUPPLIER_NO       supplierNo,
		               SUP.SUPPLIER_NAME   supplierName,
		               A.SUP_FACTORY       supFactory,
		               A.MODEL_CODE        modelCode,
		               MP.CODE_VALUE_NAME  logisticsMode,
		               A.PART_NO           partNo,
		               part.PART_SHORT_NO  partShortNo,
		               part.PART_NAME_CN   partNameCn,
		               PDD.CODE_VALUE_NAME feedbackStatus,
		               MDD.CODE_VALUE_NAME releaseStatus,
		               A.FEEDBACK_REMARK   feedbackRemark,
		               A.FORE_TYPE         foreType,
		               A.PUBLISH_MONTH     publishMonth,
       				   A.OBJ_MONTH		   objMonth,
		               B.monthOne          monthOne,
		               B.monthTwo          monthTwo,
		               B.monthThree        monthThree
		          FROM (select DFW.FACTORY_CODE,
		                       DFW.PART_NO,
		                       DFW.SUPPLIER_NO,
		                       PSW.SUP_FACTORY,
		                       DFW.PHASE,
		                       DFW.VERSION VERSION,
		                       max(DFW.FEEDBACK_STATUS) FEEDBACK_STATUS,
		                       max(DFW.RELEASE_STATUS) RELEASE_STATUS,
		                       FORE_TYPE,
		                       max(DFW.ID) ID,
		                       max(DFW.FEEDBACK_REMARK) FEEDBACK_REMARK,
		                       max(DFW.PUBLISH_MONTH) PUBLISH_MONTH,
               				   max(DFW.OBJ_MONTH)  OBJ_MONTH,
		                       max(DFW.UNLOAD_PORT) UNLOAD_PORT,
		                       max(DFW.MODEL_CODE) MODEL_CODE,
		                       max(DFW.LOGISTICS_MODE) LOGISTICS_MODE,
		                       min(DFW.CREATION_USER) CREATION_USER,
		                       min(DFW.CREATION_TIME) CREATION_TIME,
		                       min(DFW.DOWNLOAD_STATUS) DOWNLOAD_STATUS,
		                       max(DFW.DOWNLOAD_TIME) DOWNLOAD_TIME
		                  from MM_SW_DEMAND_FORECAST DFW
		                  LEFT JOIN MM_PUB_SUPPLIER PSW
		                    ON DFW.SUPPLIER_NO = PSW.SUPPLIER_NO
		                 group by DFW.FACTORY_CODE,
		                          DFW.PART_NO,
		                          DFW.SUPPLIER_NO,
		                          PSW.SUP_FACTORY,
		                          DFW.PHASE,
		                          DFW.VERSION,
		                          DFW.FORE_TYPE) A
		          LEFT JOIN (select FACTORY_CODE,
		                           PART_NO,
		                           SUPPLIER_NO,
		                           VERSION,
		                           SUM(DECODE(YEAR_MONTH,
		                                      to_char(add_months(to_date(substr(VERSION,
		                                                                        0,
		                                                                        6),
		                                                                 'yyyymm'),
		                                                         1),
		                                              'yyyymm'),
		                                      MONTH_TTL,
		                                      0)) monthOne,
		                           SUM(DECODE(YEAR_MONTH,
		                                      to_char(add_months(to_date(substr(VERSION,
		                                                                        0,
		                                                                        6),
		                                                                 'yyyymm'),
		                                                         2),
		                                              'yyyymm'),
		                                      MONTH_TTL,
		                                      0)) monthTwo,
		                           SUM(DECODE(YEAR_MONTH,
		                                      to_char(add_months(to_date(substr(VERSION,
		                                                                        0,
		                                                                        6),
		                                                                 'yyyymm'),
		                                                         3),
		                                              'yyyymm'),
		                                      MONTH_TTL,
		                                      0)) monthThree,
		                           SUP_FACTORY,
		                           PHASE
		                      from (select DFW.FACTORY_CODE,
		                                   DFW.PART_NO,
		                                   DFW.SUPPLIER_NO,
		                                   PSW.SUP_FACTORY,
		                                   DFW.PHASE,
		                                   DFW.VERSION,
		                                   TO_CHAR(DFW.PLAN_DELIVERY, 'YYYYMM') YEAR_MONTH,
		                                   sum(ORDER_QTY) MONTH_TTL
		                              from MM_SW_DEMAND_FORECAST DFW
		                              LEFT JOIN MM_PUB_SUPPLIER PSW
		                                ON DFW.SUPPLIER_NO = PSW.SUPPLIER_NO
		                             where FORE_TYPE = '1'
		                             group by DFW.FACTORY_CODE,
		                                      DFW.PART_NO,
		                                      DFW.SUPPLIER_NO,
		                                      PSW.SUP_FACTORY,
		                                      DFW.PHASE,
		                                      DFW.VERSION,
		                                      TO_CHAR(DFW.PLAN_DELIVERY, 'YYYYMM'))
		                     group by FACTORY_CODE,
		                              PART_NO,
		                              SUPPLIER_NO,
		                              SUP_FACTORY,
		                              PHASE,
		                              VERSION) B
		            ON B.FACTORY_CODE = A.FACTORY_CODE
		           AND B.PART_NO = A.PART_NO
		           AND B.SUPPLIER_NO = A.SUPPLIER_NO
		           AND NVL(B.SUP_FACTORY, '#') = NVL(A.SUP_FACTORY, '#')
		           AND B.PHASE = A.PHASE
		           AND B.VERSION = A.VERSION
		          left join mm_pub_part_uda part
		            on part.part_no = A.part_no
		          left join mm_pub_supplier sup
		            on sup.supplier_no = a.supplier_no
		          left join mm_pub_data_dict pd
		            on A.PHASE = pd.code_value
		           and pd.code_type = 'SW_PHASE'
		          left join mm_pub_data_dict dd
		            on A.DOWNLOAD_STATUS = dd.code_value
		           and dd.code_type = 'PUP_DOWNLOAD_STATUS'
		          LEFT JOIN MM_PUB_DATA_DICT MP
		            ON A.LOGISTICS_MODE = MP.CODE_VALUE
		           AND MP.CODE_TYPE = 'PUB_MM_MODEL'
		          LEFT JOIN MM_PUB_DATA_DICT PDD
		             ON A.FEEDBACK_STATUS = PDD.CODE_VALUE
		             AND PDD.CODE_TYPE = 'SW_FEEDBACK_STATUS'
		          LEFT JOIN MM_PUB_DATA_DICT MDD
		             ON A.RELEASE_STATUS = MDD.CODE_VALUE
		             AND MDD.CODE_TYPE = 'SW_RELEASE_STATUS'
         
					WHERE 1=1 
                  <if test="arriveStarTime !=null and arriveStarTime!='' ">
				  <![CDATA[ AND A.PLAN_DELIVERY>= TO_DATE(#{arriveStarTime},'yyyy-MM-dd') ]]>
				  </if>
				  <if test="arriveEndTime !=null and arriveEndTime!='' ">
				  <![CDATA[ AND A.PLAN_DELIVERY <= TO_DATE(#{arriveEndTime},'yyyy-MM-dd') ]]>
				  </if>
				  <if test="partNo !=null and partNo !='' ">
				  AND A.PART_NO like CONCAT(#{partNo}, '%')
				  </if>
				  <if test="partShortNo !=null and partShortNo !='' ">
				  AND PART.PART_SHORT_NO like CONCAT(#{partShortNo}, '%')
				  </if>
				  <if test="foreType !=null and foreType!='' ">
				  AND A.FORE_TYPE =#{foreType}
				  </if>
				  <if test="supplierNo !=null and supplierNo!='' ">
				  AND A.SUPPLIER_NO = #{supplierNo}
				  </if>
				  <if test="supFactory != null and '' != supFactory">
					AND A.SUP_FACTORY = #{supFactory}
				  </if>
				  <if test="releaseStatus !=null and releaseStatus!='' ">
				  AND A.RELEASE_STATUS = #{releaseStatus}
				  </if>
				  <if test="feedbackStatus !=null and feedbackStatus!='' ">
				  AND A.FEEDBACK_STATUS =#{feedbackStatus}
				  </if>
				  <if test="downloadStatus !=null and downloadStatus!='' ">
				  AND A.DOWNLOAD_STATUS =#{downloadStatus}
				  </if>
				  
				  <if test="version !=null and version !='' ">
				  AND A.VERSION  = #{version}
				  </if>
				  
				  <if test="logisticsMode !=null and logisticsMode !='' ">
				  AND A.LOGISTICS_MODE  = #{logisticsMode}
				  </if>
				  
				  <if test="publishMonth !=null and publishMonth !='' ">
				  AND A.PUBLISH_MONTH  = #{publishMonth}
				  </if>
				  <if test="objMonth !=null and objMonth !='' ">
				  AND A.OBJ_MONTH  = #{objMonth}
				  </if>
				  ORDER BY A.VERSION DESC,A.PART_NO,A.RELEASE_STATUS ASC,A.FEEDBACK_STATUS DESC
    </select> 
    
    
    <!-- 预测数据界面，发布功能 -->
    <update id="publishDemandForecast" parameterType="com.hanthink.sw.model.SwDemandForecastModel">
    		UPDATE MM_SW_DEMAND_FORECAST T SET T.RELEASE_STATUS = #{releaseStatus,jdbcType=VARCHAR} 
    		WHERE T.VERSION = #{version,jdbcType=VARCHAR} 
    </update>
    
    <!-- 预测数据界面，反馈功能 -->
    <update id="feedbackDemandForecast" parameterType="com.hanthink.sw.model.SwDemandForecastModel">
            UPDATE MM_SW_DEMAND_FORECAST T SET 
            T.FEEDBACK_STATUS = #{model.feedbackStatus,jdbcType=VARCHAR},
            T.FEEDBACK_REMARK = #{model.feedbackRemark,jdbcType=VARCHAR},
            T.LAST_MODIFIED_TIME = SYSDATE
    		WHERE T.ID	IN
    	  <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
		     #{id}
		  </foreach>
    </update>
    
        <!-- 预测数据界面，根据多条件反馈功能 -->
<!--     <update id="feedbackDemandForecast" parameterType="com.hanthink.sw.model.SwDemandForecastModel">
       <foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
            UPDATE MM_SW_DEMAND_FORECAST SET
	            FEEDBACK_STATUS		= #{item.feedbackStatus,jdbcType=VARCHAR},
	            FEEDBACK_REMARK	    = #{item.feedbackRemark,jdbcType=VARCHAR}
            WHERE VERSION = #{item.version,jdbcType=VARCHAR} 
              AND CAR_TYPE = #{item.carType,jdbcType=VARCHAR}
              AND PART_NO = #{item.partNo,jdbcType=VARCHAR}
              AND SUPPLIER_NO = #{item.supplierNo,jdbcType=VARCHAR}
              AND PHASE = #{item.phase,jdbcType=VARCHAR}
              AND FORE_TYPE = #{item.foreType,jdbcType=VARCHAR}
              AND RELEASE_STATUS = #{item.releaseStatus,jdbcType=VARCHAR}
        </foreach>
    </update> -->
    
    
    <!-- 查询登录用户类型 -->
    <select id="getUserType" parameterType="com.hanthink.sw.model.SwDemandForecastModel" resultType="com.hanthink.sw.model.SwDemandForecastModel">
	    SELECT A.USER_TYPE userType, A.SUPPLIER_NO supplierNo
		  FROM SYS_USER A
		 WHERE A.ACCOUNT_ = #{account} 
    </select>
    
    	<!-- 查询导出数据（作者：时来） -->
    	<select id="queryDemandForecastExportData" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
		  A.VERSION,
		  pd.code_value_name PHASE, 
		 <!--  A.PHASE,  -->
		  '' COMPANY, 
		  A.FACTORY_CODE,
		  A.UNLOAD_PORT,
		  A.SUPPLIER_NO,
		  SUP.SUPPLIER_NAME,
		  A.SUP_FACTORY, 
		  A.MODEL_CODE,
		  MP.CODE_VALUE_NAME LOGISTICS_MODE,
		  <!-- A.LOGISTICS_MODE, -->
		  A.PART_NO,
		  part.PART_SHORT_NO, 
		  part.PART_NAME_CN,
		  A.PUBLISH_MONTH,
          A.OBJ_MONTH,
       
		  ${monthSql} 
		  
		  ${daySql} 
		  
		  A.CREATION_USER,
		  to_char(A.CREATION_TIME,'yyyy-mm-dd') CREATION_TIME
		  <!-- dd.code_value_name DOWNLOAD_STATUS, -->
		  <!-- A.DOWNLOAD_STATUS, -->
		  <!-- to_char(A.DOWNLOAD_TIME,'yyyy-mm-dd') DOWNLOAD_TIME -->
		FROM (
		  select
		   DFW.FACTORY_CODE,
		   DFW.PART_NO,
		   DFW.SUPPLIER_NO,
		   PSW.SUP_FACTORY,
		   DFW.PHASE,
		   DFW.VERSION VERSION,
           max(DFW.PUBLISH_MONTH) PUBLISH_MONTH,
           max(DFW.OBJ_MONTH)  OBJ_MONTH,
		   max(DFW.UNLOAD_PORT) UNLOAD_PORT,
		   max(DFW.MODEL_CODE) MODEL_CODE,
		   max(DFW.LOGISTICS_MODE) LOGISTICS_MODE,
		   min(DFW.CREATION_USER) CREATION_USER,
		   min(DFW.CREATION_TIME) CREATION_TIME,
		   min(DFW.DOWNLOAD_STATUS) DOWNLOAD_STATUS,
		   max(DFW.DOWNLOAD_TIME) DOWNLOAD_TIME
		  from MM_SW_DEMAND_FORECAST DFW
		  LEFT JOIN MM_PUB_SUPPLIER PSW
		  	ON DFW.SUPPLIER_NO = PSW.SUPPLIER_NO
		  where DFW.PLAN_DELIVERY between to_date(#{startDateStr},'yyyy-mm-dd') and to_date(#{endDateStr},'yyyy-mm-dd') <!--界面输入的起始月份，三个月区间内-->
		  	<if test="model.supplierNo !=null and model.supplierNo!='' ">
				  AND DFW.SUPPLIER_NO = #{model.supplierNo}
			</if>
			<if test="model.releaseStatus !=null and model.releaseStatus !='' ">
				  AND DFW.RELEASE_STATUS = #{model.releaseStatus}
			 </if>
			 <if test="model.partNo !=null and model.partNo !='' ">
				  AND DFW.PART_NO like CONCAT(#{model.partNo}, '%')
			 </if>
			 <if test="model.logisticsMode !=null and model.logisticsMode !='' ">
				  AND DFW.LOGISTICS_MODE  = #{model.logisticsMode}
			 </if>
			 <if test="model.version !=null and model.version !='' ">
				  AND DFW.VERSION = #{model.version}
			  </if>
			  <if test="model.supFactory != null and '' != model.supFactory">
					AND PSW.SUP_FACTORY = #{model.supFactory}
			  </if>
			  <if test="publishMonth !=null and publishMonth !='' ">
			  AND DFW.PUBLISH_MONTH  = #{publishMonth}
			  </if>
			  <if test="objMonth !=null and objMonth !='' ">
			  AND DFW.OBJ_MONTH  = #{objMonth}
			  </if>
				  
		      <if test="model.arriveStarTime !=null and model.arriveStarTime!='' ">
			  <![CDATA[ AND DFW.PLAN_DELIVERY>= TO_DATE(#{model.arriveStarTime},'yyyy-MM-dd') ]]>
			  </if>
			  <if test="model.arriveEndTime !=null and model.arriveEndTime!='' ">
			  <![CDATA[ AND DFW.PLAN_DELIVERY <= TO_DATE(#{model.arriveEndTime},'yyyy-MM-dd') ]]>
			  </if>
		  group by DFW.FACTORY_CODE, DFW.PART_NO, DFW.SUPPLIER_NO, PSW.SUP_FACTORY, DFW.PHASE,DFW.VERSION
		) A
		LEFT JOIN (
		  select 
		   FACTORY_CODE,
		   PART_NO,
		   SUPPLIER_NO,
		   
		   ${monthSqlB}
		   
		   SUP_FACTORY,
		   PHASE
		  from(
		    select 
		     DFW.FACTORY_CODE,
		     DFW.PART_NO,
		     DFW.SUPPLIER_NO,
		     PSW.SUP_FACTORY,
		     DFW.PHASE,
		     TO_CHAR(DFW.PLAN_DELIVERY,'YYYY-MM') YEAR_MONTH,
		     sum(ORDER_QTY) MONTH_TTL
		    from MM_SW_DEMAND_FORECAST DFW
             LEFT JOIN MM_PUB_SUPPLIER  PSW
             ON DFW.SUPPLIER_NO = PSW.SUPPLIER_NO
		    where DFW.PLAN_DELIVERY between to_date(#{startDateStr},'yyyy-mm-dd') and to_date(#{endDateStr},'yyyy-mm-dd') <!--界面输入的起始月份，三个月区间内 -->
		      and FORE_TYPE = '1' <!--月总量 -->
		      <if test="model.supplierNo !=null and model.supplierNo!='' ">
				  AND DFW.SUPPLIER_NO = #{model.supplierNo}
			  </if>
			  <if test="model.releaseStatus !=null and model.releaseStatus != '' ">
				  AND DFW.RELEASE_STATUS = #{model.releaseStatus}
			  </if>
			  <if test="model.partNo !=null and model.partNo !='' ">
				  AND DFW.PART_NO like CONCAT(#{model.partNo}, '%')
			  </if>
			  <if test="model.logisticsMode !=null and model.logisticsMode !='' ">
				  AND DFW.LOGISTICS_MODE  = #{model.logisticsMode}
			  </if>
			  <if test="model.version !=null and model.version !='' ">
				  AND DFW.VERSION  = #{model.version}
			  </if>
			  <if test="model.supFactory != null and '' != model.supFactory">
					AND PSW.SUP_FACTORY = #{model.supFactory}
			  </if>
			  <if test="publishMonth !=null and publishMonth !='' ">
			  		AND DFW.PUBLISH_MONTH  = #{publishMonth}
			  </if>
			  <if test="objMonth !=null and objMonth !='' ">
			  		AND DFW.OBJ_MONTH  = #{objMonth}
			  </if>
			  
			  <if test="model.arriveStarTime !=null and model.arriveStarTime!='' ">
			  <![CDATA[ AND DFW.PLAN_DELIVERY>= TO_DATE(#{model.arriveStarTime},'yyyy-MM-dd') ]]>
			  </if>
			  <if test="model.arriveEndTime !=null and model.arriveEndTime!='' ">
			  <![CDATA[ AND DFW.PLAN_DELIVERY <= TO_DATE(#{model.arriveEndTime},'yyyy-MM-dd') ]]>
			  </if>
		    group by DFW.FACTORY_CODE, DFW.PART_NO, DFW.SUPPLIER_NO, PSW.SUP_FACTORY, DFW.PHASE, TO_CHAR(DFW.PLAN_DELIVERY,'YYYY-MM')
		  )
		  group by FACTORY_CODE, PART_NO, SUPPLIER_NO, SUP_FACTORY, PHASE
		) B ON B.FACTORY_CODE = A.FACTORY_CODE 
		        AND B.PART_NO = A.PART_NO
		        AND B.SUPPLIER_NO = A.SUPPLIER_NO
		        AND B.SUP_FACTORY = A.SUP_FACTORY
		        AND B.PHASE = A.PHASE
		LEFT JOIN (
		  select 
		   FACTORY_CODE,
		   PART_NO,
		   SUPPLIER_NO,
		   
		   ${daySqlC}
		   
		   SUP_FACTORY,
		   PHASE
		  from(
		    select 
		     SDF.FACTORY_CODE,
		     SDF.PART_NO,
		     SDF.SUPPLIER_NO,
		     PS.SUP_FACTORY,
		     SDF.PHASE,
		     TO_CHAR(SDF.PLAN_DELIVERY,'YYYY-MM-DD') YEAR_MONTH_DAY,
		     sum(SDF.ORDER_QTY) MONTH_TTL
		    from MM_SW_DEMAND_FORECAST SDF
		     LEFT JOIN MM_PUB_SUPPLIER PS
             ON SDF.SUPPLIER_NO = PS.SUPPLIER_NO
		    where SDF.PLAN_DELIVERY between to_date(#{startDateStr},'yyyy-mm-dd') and to_date(#{endDateStr},'yyyy-mm-dd') <!--界面输入的起始月份，三个月区间内 -->
		      and SDF.FORE_TYPE = '1' <!--月预测下日明细 -->
		      <if test="model.supplierNo !=null and model.supplierNo!='' ">
				  AND SDF.SUPPLIER_NO = #{model.supplierNo}
			  </if>
			  <if test="model.releaseStatus !=null and model.releaseStatus != '' ">
				  AND SDF.RELEASE_STATUS = #{model.releaseStatus}
			  </if>
			  <if test="model.partNo !=null and model.partNo !='' ">
				  AND SDF.PART_NO like CONCAT(#{model.partNo}, '%')
			  </if>
			  <if test="model.logisticsMode !=null and model.logisticsMode !='' ">
				  AND SDF.LOGISTICS_MODE  = #{model.logisticsMode}
			  </if>
			  <if test="model.version !=null and model.version !='' ">
				  AND SDF.VERSION  = #{model.version}
			  </if>
			  <if test="model.supFactory != null and '' != model.supFactory">
					AND PS.SUP_FACTORY = #{model.supFactory}
			  </if>
			  <if test="publishMonth !=null and publishMonth !='' ">
			  		AND SDF.PUBLISH_MONTH  = #{publishMonth}
			  </if>
			  <if test="objMonth !=null and objMonth !='' ">
			  		AND SDF.OBJ_MONTH  = #{objMonth}
			  </if>
			  
			  <if test="model.arriveStarTime !=null and model.arriveStarTime!='' ">
			  <![CDATA[ AND SDF.PLAN_DELIVERY>= TO_DATE(#{model.arriveStarTime},'yyyy-MM-dd') ]]>
			  </if>
			  <if test="model.arriveEndTime !=null and model.arriveEndTime!='' ">
			  <![CDATA[ AND SDF.PLAN_DELIVERY <= TO_DATE(#{model.arriveEndTime},'yyyy-MM-dd') ]]>
			  </if>
		    group by SDF.FACTORY_CODE, SDF.PART_NO, SDF.SUPPLIER_NO, PS.SUP_FACTORY, SDF.PHASE, TO_CHAR(SDF.PLAN_DELIVERY,'YYYY-MM-DD')
		  )
		  group by FACTORY_CODE, PART_NO, SUPPLIER_NO, SUP_FACTORY, PHASE
		) C ON C.FACTORY_CODE = A.FACTORY_CODE 
		        AND C.PART_NO = A.PART_NO
		        AND C.SUPPLIER_NO = A.SUPPLIER_NO
		        AND C.SUP_FACTORY = A.SUP_FACTORY
		        AND C.PHASE = A.PHASE
		left join mm_pub_part_uda part on part.part_no = A.part_no
		left join mm_pub_supplier sup on sup.supplier_no = a.supplier_no
		left join mm_pub_data_dict pd 
		   on A.PHASE = pd.code_value
		   and pd.code_type = 'SW_PHASE'
		left join mm_pub_data_dict dd 
		   on A.DOWNLOAD_STATUS = dd.code_value
		   and dd.code_type = 'PUP_DOWNLOAD_STATUS'
		LEFT JOIN MM_PUB_DATA_DICT MP
   			ON A.LOGISTICS_MODE = MP.CODE_VALUE
   			AND MP.CODE_TYPE = 'PUB_MM_MODEL'
   		ORDER BY A.VERSION DESC ,A.SUPPLIER_NO DESC ,A.PART_NO DESC
	</select>
	
	<!-- 查询发布版本号下拉框值 -->
	<select id="getVersion" parameterType="java.util.Map" resultType="com.hanthink.sw.model.SwDemandForecastModel">
		SELECT DISTINCT A.VERSION value, A.VERSION label
		  FROM MM_SW_DEMAND_FORECAST A
		 WHERE A.FACTORY_CODE = #{factoryCode,jdbcType=VARCHAR}
	</select>
	
	<!-- 给发布版本号下拉框默认值 -->
	<select id="getDefaultVersion" parameterType="java.util.Map" resultType="com.hanthink.sw.model.SwDemandForecastModel">
		SELECT DISTINCT A.VERSION value, A.VERSION label
	      FROM MM_SW_DEMAND_FORECAST A
	     WHERE A.FACTORY_CODE = #{factoryCode,jdbcType=VARCHAR} AND ROWNUM = 1
	      ORDER BY A.VERSION DESC
	</select>

</mapper>