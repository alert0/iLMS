package com.hotent.org.persistence.manager;

import java.util.List;
import java.util.Map;

import org.springframework.web.multipart.MultipartFile;

import com.hanthink.base.model.TableColumnVO;
import com.hanthink.base.model.TableOpeLogVO;
import com.hotent.base.api.query.QueryFilter;
import com.hotent.base.manager.api.Manager;
import com.hotent.org.persistence.model.User;

/**
 * 
 * <pre>
 * 描述：用户表 处理接口
 * 构建组：x5-bpmx-platform
 * 作者:ray
 * 邮箱:zhangyg@jee-soft.cn
 * 日期:2016-06-30 10:26:50
 * 版权：广州宏天软件有限公司
 * </pre>
 */
public interface UserManager extends Manager<String, User> {
	/**
	 * 根据Account取定义对象。
	 * @param code
	 * @return
	 */
	User getByAccount(String account);
	
	/**
	 * 不含用户组织关系
	 */
	List<User> getUserListByOrgId(String orgId);
	
	/**
	 * 含组织用户关系表数据
	 * @param orgId
	 * @return
	 */
	List<User> getOrgUserRelByOrgId(String orgId);
	
	/**
	 * 不含用户组织关系
	 * @param queryFilter
	 * @return
	 */
	List<User> queryOrgUser(QueryFilter queryFilter);
	
	/**
	 * 含组织用户关系表数据
	 * @param queryFilter
	 * @return
	 */
	List queryOrgUserRel(QueryFilter queryFilter);
	
	/**
	 * 根据岗位编码获取用户列表
	 * @param relCode
	 * @return
	 */
	List<User> getListByRelCode(String relCode);
	
	/**
	 * 根据岗位ID获取用户列表
	 * @param relCode
	 * @return
	 */
	List<User> getListByRelId(String relId);
	
	/**
	 * 根据职务ID获取用户列表
	 * @param jobId
	 * @return
	 */
	List<User> getListByJobId(String jobId);
	
	/**
	 * 根据角色ID获取用户列表
	 * @param roleId
	 * @return
	 */
	List<User> getUserListByRoleId(String roleId);
	
	/**
	 * 根据角色Code获取用户列表
	 * @param roleId
	 * @return
	 */
	List<User> getUserListByRoleCode(String roleCode);
	
	/**
	 * 判断系统中用户是否存在。
	 * @param user
	 * @return
	 */
	boolean isUserExist(User user);
	/**
	 * 根据email查询用户
	 * @param userId
	 * @param email
	 * @return
	 */
	List<User> getByUserEmail(String email);
	/**
	 * 导入用户组织
	 * @param file
	 * @param demId
	 * @return
	 * @throws Exception
	 */
	Map<String,Object> importUser(MultipartFile file,String demId)  throws Exception ;
	
	
	/**
	 * 获取登录的用户信息
	 * @param account
	 * @return
	 */
	User getLoginUser(String account);
	
	/**
	 * 获取用户的所有上级
	 * @param underUserId
	 * @return
	 */
	List<User> getUpUsersByUserId(String underUserId);
	
	/**
	 * 获取用户某组织下的上级
	 * @param account
	 * @param orgCode
	 * @return
	 */
	User getUpUserByUserIdAndOrgId(String account,String orgCode);
	
	/**
	 * 获取用户的所有下级
	 * @param upUserId
	 * @return
	 */
	List<User> getUnderUsersByUserId(String upUserId);
	
	/**
	 * 获取用户某组织下的下级用户
	 * @param account
	 * @param orgCode
	 * @return
	 */
	List<User> getUnderUserByUserIdAndOrgId(String account,String orgCode);

	/**
	 * 用户个人信息修改
	 * @param user
	 * @return
	 * @author ZUOSL	
	 * @DATE	2018年12月10日 下午5:54:20
	 */
	int updateUserInfo(User user);

	/**
	 * @Description:  记录日志
	 * @param: @param logVO
	 * @param: @param pkColumnVO    
	 * @return: void   
	 * @author: dtp
	 * @date: 2019年6月5日
	 */
	void logOpeTableData(TableOpeLogVO logVO, TableColumnVO pkColumnVO);
}
