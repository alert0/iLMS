package com.hanthink.sw.controller;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.ibatis.session.RowBounds;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.hanthink.business.util.MakeQrcodeImages;

import com.hanthink.sw.manager.SwDeliveryManager;
import com.hanthink.sw.manager.SwDemondOrderManager;
import com.hanthink.sw.manager.SwUserManager;
import com.hanthink.sw.model.SwAnnounceModel;
import com.hanthink.sw.model.SwDeliveryModel;
import com.hanthink.sw.model.SwDemandForecastModel;
import com.hanthink.sw.model.SwDemondOrderDetailModel;
import com.hanthink.sw.model.SwUserModel;
import com.hanthink.util.BufferImage.BarCodeImage;
import com.hanthink.util.constant.Constant;
import com.hotent.base.api.model.ResultMessage;
import com.hotent.base.core.util.FileUtil;
import com.hotent.base.core.util.string.StringUtil;
import com.hotent.base.core.web.GenericController;
import com.hotent.base.core.web.RequestUtil;
import com.hotent.base.db.mybatis.domain.DefaultPage;
import com.hotent.base.db.mybatis.domain.PageJson;
import com.hotent.base.db.mybatis.domain.PageList;
import com.hotent.mini.web.util.AppFileUtil;
import com.hotent.org.api.model.IUser;
import com.hotent.sys.util.ContextUtil;

import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.export.JRPdfExporter;
/**
 * 
* <p>Title: SwDeliveryController</p>  
* <p>Description: 发货管理controller</p> 
* <p>Company: hanthink</p>
* @author luoxq  
* @date 2018年10月19日 上午9:09:49
 */
@Controller
@RequestMapping("/sw/swDelivery")
public class SwDeliveryController extends GenericController{

	@Resource
	private SwDeliveryManager manager;
	@Resource
	private SwDemondOrderManager swDemondOrderManager;
	
	@Resource
	private SwUserManager swUserManager;
	
	private static Logger log = LoggerFactory.getLogger(SwDeliveryController.class);
	/**
	 * 
	 * <p>Title: queryJisoGroupPage</p>  
	 * <p>Description: 发货数据管理，分页查询</p>  
	 * @param request
	 * @param reponse
	 * @param model
	 * @return
	 * @throws Exception  
	 * @authoer luoxq
	 * @time 2018年10月18日 上午10:11:45
	 */
	@RequestMapping("queryJisoDeliveryPage")
	public @ResponseBody PageJson queryJisoDeliveryPage(HttpServletRequest request,
            HttpServletResponse reponse,
            @ModelAttribute("model") SwDeliveryModel model) throws Exception{
        DefaultPage p=new DefaultPage(new RowBounds(getQueryFilter(request).getPage().getStartIndex(), getQueryFilter(request).getPage().getPageSize()));
        IUser user = ContextUtil.getCurrentUser();
        ResultMessage message = null;
        
        model.setFactoryCode(user.getCurFactoryCode());
        PageList<SwDeliveryModel> pageList = (PageList<SwDeliveryModel>) manager.queryJisoDeliveryPage(model, p);
        return new PageJson(pageList);
	 
     }
	
	/**
	 * 
	 * <p>Title: queryJisoDeliveryDetailPage</p>  
	 * <p>Description: 发货管理界面，查询明细功能</p>  
	 * @param request
	 * @param reponse
	 * @param model
	 * @return
	 * @throws Exception  
	 * @authoer luoxq
	 * @time 2018年10月19日 上午9:10:16
	 */
	@RequestMapping("queryJisoDeliveryDetailPage")
	public @ResponseBody PageJson queryJisoDeliveryDetailPage(HttpServletRequest request,
            HttpServletResponse reponse,
            @ModelAttribute("model") SwDeliveryModel model) throws Exception{
        DefaultPage p=new DefaultPage(new RowBounds(getQueryFilter(request).getPage().getStartIndex(), getQueryFilter(request).getPage().getPageSize()));
        
        
        PageList<SwDeliveryModel> pageList = (PageList<SwDeliveryModel>) manager.queryJisoDeliveryDetailPage(model, p);
        return new PageJson(pageList);
	}
	

	/**
	 * 订单打印
	 * 
	 * @param request
	 * @param response
	 * @throws Exception luoxq
	 */
	@RequestMapping("DemondOrderPrint")
	public void jitOrderPrint(HttpServletRequest request, HttpServletResponse response) throws Exception {
		String orderNoStr = RequestUtil.getString(request, "orderNo");
		String[] orderNoArr = orderNoStr.split(",");
		List<SwDemondOrderDetailModel> detailList = null;
		List<SwDemondOrderDetailModel> updateList = new ArrayList<SwDemondOrderDetailModel>();

		try {

			if (null != orderNoArr && orderNoArr.length > 0) {
				// 打印N张
				List<JasperPrint> JasperPrintList = new ArrayList<JasperPrint>();

				for (int i = 0; i < orderNoArr.length; i++) {
					SwDemondOrderDetailModel model_q = new SwDemondOrderDetailModel();
					String filenurl = FileUtil.getClassesPath() + File.separator + "template" + File.separator
							+ "ireport" + File.separator + "demo" + File.separator + "DEMOND_ORDER.jasper";
					model_q.setOrderNo(orderNoArr[i]);
					updateList.add(model_q);
					// 查询订单明细
					detailList = swDemondOrderManager.queryDemondOrderDetailList(model_q);
					for (int j = 0; j < detailList.size(); j++) {
						detailList.get(j).setRowId((j + 1) + "");
						detailList.get(j).setPageCount((i + 1) + "/" + orderNoArr.length);
						detailList.get(j).setLabelCount(detailList.size() + "");

					}
					HashMap<String, Object> parameters = new HashMap<String, Object>();
					if (null != detailList && detailList.size() > 0) {
						SwDemondOrderDetailModel model = detailList.get(0);
						String orderType = model.getOrderType();// 订单类型
						String spType = model.getSpType();// 售后订单类型,2,3采用特殊打印类型
						BufferedImage img = BarCodeImage.creatBarCode(model.getOrderNo());
						if ("12".equals(orderType) && ("2".equals(spType) || "3".equals(spType))) {
							filenurl = FileUtil.getClassesPath() + File.separator + "template" + File.separator
									+ "ireport" + File.separator + "demo" + File.separator + "DEMOND_ORDER_SP.jasper";
							String hmsOrder = model.getHmsOrder() != null ? model.getHmsOrder() : " ";
							img = BarCodeImage.creatBarCode(hmsOrder);
						}
						parameters.put("barCode", img);
						InputStream file = new FileInputStream(filenurl);
						JRDataSource jRDataSource = new JRBeanCollectionDataSource(detailList);
						JasperPrint jasperPrint = JasperFillManager.fillReport(file, parameters, jRDataSource);
						JasperPrintList.add(jasperPrint);
					}

				}
				if (JasperPrintList.size() > 0) {
					response.setContentType("application/pdf");
					response.setHeader("Content-disposition", "inline;");
					JRPdfExporter exporter = new JRPdfExporter();
					OutputStream out = response.getOutputStream();
					exporter.setParameter(JRExporterParameter.JASPER_PRINT_LIST, JasperPrintList);
					exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, out);
					exporter.exportReport();

					swDemondOrderManager.updatePrintInfo(updateList);
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
			log.error(e.toString());
			throw new Exception("系统错误,请联系管理员");
		}
	}
	
	
}
