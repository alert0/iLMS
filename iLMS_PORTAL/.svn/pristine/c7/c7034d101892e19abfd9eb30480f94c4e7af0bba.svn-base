<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotent.base.core.mail.model.Mail">
	<resultMap id="Mail" type="com.hotent.base.core.mail.model.Mail">
		<id property="id" column="ID_" jdbcType="VARCHAR"/>
		<result property="subject" column="TITLE_" jdbcType="VARCHAR"/>
		<result property="content" column="CONTENT_" jdbcType="CLOB"/>
		<result property="senderAddress" column="SENDER_ADDRESSES_" jdbcType="VARCHAR"/>
		<result property="senderName" column="SENDER_NAME_" jdbcType="VARCHAR"/>
		<result property="receiverAddresses" column="RECEIVER_ADDRESSES_" jdbcType="VARCHAR"/>
		<result property="receiverName" column="RECEIVER_NAMES_" jdbcType="VARCHAR"/>
		<result property="copyToAddresses" column="CC_ADDRESSES_" jdbcType="VARCHAR"/>
		<result property="bccName" column="BCC_NAMES_" jdbcType="VARCHAR"/>
		<result property="bcCAddresses" column="BCC_ADDRESSES_" jdbcType="VARCHAR"/>
		<result property="copyToName" column="CC_NAMES_" jdbcType="VARCHAR"/>
		<result property="messageId" column="MESSAGE_ID_" jdbcType="VARCHAR"/>
		<result property="type" column="TYPE_" jdbcType="NUMERIC"/>
		<result property="userId" column="USER_ID_" jdbcType="VARCHAR"/>
		<result property="isReply" column="IS_REPLY_" jdbcType="NUMERIC"/>
		<result property="sendDate" column="SEND_DATE_" jdbcType="TIMESTAMP"/>
		<result property="fileIds" column="FILE_IDS_" jdbcType="VARCHAR"/>
		<result property="isRead" column="IS_READ_" jdbcType="NUMERIC"/>
		<result property="setId" column="SET_ID_" jdbcType="VARCHAR"/>
	</resultMap>
	
	<sql id="columns">
		ID_,TITLE_,CONTENT_,SENDER_ADDRESSES_,SENDER_NAME_,RECEIVER_ADDRESSES_,RECEIVER_NAMES_,CC_ADDRESSES_,CC_NAMES_,BCC_ADDRESSES_,BCC_NAMES_,SEND_DATE_,FILE_IDS_,IS_READ_,IS_REPLY_,MESSAGE_ID_,TYPE_,USER_ID_,SET_ID_
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(id)"> AND ID_  =#{id} </if>
			<if test="@Ognl@isNotEmpty(subject)"> AND TITLE_  LIKE #{subject} </if>
			<if test="@Ognl@isNotEmpty(senderAddress)"> AND SENDER_ADDRESSES_  LIKE #{senderAddress}  </if>
			<if test="@Ognl@isNotEmpty(senderName)"> AND SENDER_NAME_  LIKE #{senderName}  </if>
			<if test="@Ognl@isNotEmpty(receiverAddresses)"> AND RECEIVER_ADDRESSES_  LIKE #{receiverAddresses}  </if>
			<if test="@Ognl@isNotEmpty(receiverName)"> AND RECEIVER_NAMES_  LIKE #{receiverName}  </if>
			<if test="@Ognl@isNotEmpty(copyToAddresses)"> AND CC_ADDRESSES_  LIKE #{copyToAddresses}  </if>
			<if test="@Ognl@isNotEmpty(copyToName)"> AND CC_NAMES_  LIKE #{copyToName}  </if>
			<if test="@Ognl@isNotEmpty(bcCAddresses)"> AND BCC_ADDRESSES_  LIKE #{bcCAddresses}  </if>
			<if test="@Ognl@isNotEmpty(bccName)"> AND BCC_NAMES_  LIKE #{bccName}  </if>
			<if test="@Ognl@isNotEmpty(sendDate)"> AND SEND_DATE_  =#{sendDate} </if>
			<if test="@Ognl@isNotEmpty(fileIds)"> AND FILE_IDS_  LIKE #{fileIds}  </if>
			<if test="@Ognl@isNotEmpty(isRead)"> AND IS_READ_  =#{isRead} </if>
			<if test="@Ognl@isNotEmpty(isReply)"> AND IS_REPLY_  =#{isReply} </if>
			<if test="@Ognl@isNotEmpty(messageId)"> AND MESSAGE_ID_  =#{messageId} </if>
			<if test="@Ognl@isNotEmpty(type)"> AND TYPE_  =#{type} </if>
			<if test="@Ognl@isNotEmpty(userId)"> AND USER_ID_  =#{userId} </if>
			<if test="@Ognl@isNotEmpty(setId)"> AND SET_ID_  =#{setId} </if>
		</where>
	</sql>

	
	<sql id="dynamicWhere2">
		<where>
		    USER_ID_=#{userId} 
		    <if test="@Ognl@isNotEmpty(subject)"> AND TITLE_  LIKE #{subject} </if>
			<if test="@Ognl@isNotEmpty(beginsendDate)"> AND mail.SEND_DATE_  >=#{beginsendDate,jdbcType=DATE} </if>
			<if test="@Ognl@isNotEmpty(endsendDate)" > AND mail.SEND_DATE_ &lt;=#{endsendDate,jdbcType=DATE} </if>
			<if test="@Ognl@isNotEmpty(isRead)"> AND IS_READ_  =#{isRead} </if>
		</where>
	</sql>
	
	<insert id="create" parameterType="com.hotent.base.core.mail.model.Mail">
		INSERT INTO sys_mail
		(ID_,TITLE_,CONTENT_,SENDER_ADDRESSES_,SENDER_NAME_,RECEIVER_ADDRESSES_,RECEIVER_NAMES_,CC_ADDRESSES_,BCC_NAMES_,BCC_ADDRESSES_,CC_NAMES_,MESSAGE_ID_,TYPE_,USER_ID_,IS_REPLY_,SEND_DATE_,FILE_IDS_,IS_READ_,SET_ID_)
		VALUES 
		(#{id,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, #{content,jdbcType=CLOB}, #{senderAddress,jdbcType=VARCHAR}, #{senderName,jdbcType=VARCHAR}, #{receiverAddresses,jdbcType=VARCHAR}, #{receiverName,jdbcType=VARCHAR}, #{copyToAddresses,jdbcType=VARCHAR}, #{bccName,jdbcType=VARCHAR}, #{bcCAddresses,jdbcType=VARCHAR}, #{copyToName,jdbcType=VARCHAR}, #{messageId,jdbcType=VARCHAR}, #{type,jdbcType=NUMERIC}, #{userId,jdbcType=VARCHAR}, #{isReply,jdbcType=NUMERIC}, #{sendDate,jdbcType=TIMESTAMP}, #{fileIds,jdbcType=VARCHAR}, #{isRead,jdbcType=NUMERIC}, #{setId,jdbcType=VARCHAR})
	</insert>
	
	<select id="get"   parameterType="java.lang.String" resultMap="Mail">
		SELECT * FROM sys_mail 
		WHERE 
		ID_=#{id}
	</select>
	
	<select id="getById" parameterType="java.lang.Long" resultMap="Mail">
		SELECT <include refid="columns"/>
		FROM sys_mail
		WHERE
		ID_=#{id}
	</select>
	
	<select id="query" parameterType="java.util.Map" resultMap="Mail">
		SELECT * FROM sys_mail
		<where>
			<if test="whereSql!=null">
				${whereSql}
			</if>
		</where>
		<if test="orderBySql!=null">
			ORDER BY ${orderBySql}
		</if>
		<if test="orderBySql==null">
			ORDER BY ID_ DESC
		</if>
	</select>
	
	<update id="update" parameterType="com.hotent.base.core.mail.model.Mail">
		UPDATE sys_mail SET
		TITLE_=#{subject,jdbcType=VARCHAR},
		CONTENT_=#{content,jdbcType=CLOB},
		SENDER_ADDRESSES_=#{senderAddress,jdbcType=VARCHAR},
		SENDER_NAME_=#{senderName,jdbcType=VARCHAR},
		RECEIVER_ADDRESSES_=#{receiverAddresses,jdbcType=VARCHAR},
		RECEIVER_NAMES_=#{receiverName,jdbcType=VARCHAR},
		CC_ADDRESSES_=#{copyToAddresses,jdbcType=VARCHAR},
		BCC_NAMES_=#{bccName,jdbcType=VARCHAR},
		BCC_ADDRESSES_=#{bcCAddresses,jdbcType=VARCHAR},
		CC_NAMES_=#{copyToName,jdbcType=VARCHAR},
		MESSAGE_ID_=#{messageId,jdbcType=VARCHAR},
		TYPE_=#{type,jdbcType=NUMERIC},
		USER_ID_=#{userId,jdbcType=VARCHAR},
		IS_REPLY_=#{isReply,jdbcType=NUMERIC},
		SEND_DATE_=#{sendDate,jdbcType=TIMESTAMP},
		FILE_IDS_=#{fileIds,jdbcType=VARCHAR},
		IS_READ_=#{isRead,jdbcType=NUMERIC},
		SET_ID_=#{setId,jdbcType=VARCHAR}
		WHERE
		ID_=#{id}
	</update>
	
	<update id="updateTypes" parameterType="java.util.Map">
		UPDATE sys_mail SET 
		TYPE_=#{type}
		where ID_=#{id}
	</update>
	
	<select id="getByIsDefault"  parameterType="java.lang.String" resultMap="Mail">
		SELECT * FROM sys_mail  
        where  RECEIVER_ADDRESSES_=#{receiverAddresses} and USER_ID_=#{userId}
    </select>
    
    <select id="getByEmailId" resultType="int">
	 SELECT count(*) FROM sys_mail where MESSAGE_ID_=#{messageId} and SET_ID_=#{setId}
    </select>	
	
	<delete id="remove" parameterType="java.lang.String">
		DELETE FROM sys_mail 
		WHERE
		ID_=#{id}
	</delete>
	
	
	<select id="getAll" resultMap="Mail">
		SELECT <include refid="columns"/>
		FROM sys_mail   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ID_  desc
		</if>
	</select>
	
	<select id="getDefaultMailList" resultMap="Mail">
		SELECT <include refid="columns"/>
		FROM sys_mail mail
		<include refid="dynamicWhere2"/> 
		and 
		SET_ID_=#{setId} and TYPE_=#{type}
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ID_  desc
		</if>
	</select>
		
	<select id="getFolderList"   parameterType="java.util.Map" resultMap="Mail">
    	SELECT <include refid="columns"/>
		FROM sys_mail
		<include refid="dynamicWhere2"/> 
		and 
		SET_ID_=#{setId} and TYPE_=#{type}
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ID_  desc
		</if>
    </select>
    
    <select id="getFolderCount" resultType="int">
    	SELECT COUNT(*) FROM sys_mail WHERE SET_ID_=#{setId} and TYPE_=#{type}
    </select>
    
    <delete id="delByEmailid" parameterType="java.lang.String">
		DELETE FROM sys_mail 
		WHERE
		MESSAGE_ID_=#{uid}
	</delete>

	<delete id="delBySetId" parameterType="java.lang.String">
		DELETE FROM sys_mail 
		WHERE
		SET_ID_=#{setId}
	</delete>
	<select id="getMailByUserId" parameterType="java.lang.String" resultType="com.hotent.base.core.mail.model.Mail" >
		select ID_,TITLE_ FROM sys_mail where USER_ID_=#{userId} and IS_READ_=0 and TYPE_=1 order by SEND_DATE_ desc
	</select>
	
	<select id="getUIDBySetId" parameterType="java.lang.String" resultType="java.lang.String" >
		select MESSAGE_ID_ FROM sys_mail where SET_ID_=#{setId} order by ID_ desc
	</select>
	
	<update id="updateRely" parameterType="java.util.Map">
		UPDATE sys_mail SET 
		IS_REPLY_=#{isReply}
		where ID_=#{id}
	</update>
</mapper>