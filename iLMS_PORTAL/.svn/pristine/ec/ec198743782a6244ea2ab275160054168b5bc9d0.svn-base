<beans  xmlns="http://www.springframework.org/schema/beans" 
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">
	
	
	<security:http pattern="/js/**" security="none"></security:http>
	<security:http pattern="/attachFiles/**" security="none"></security:http>
	<security:http pattern="/commons/**" security="none"></security:http>
	<security:http pattern="/css/**" security="none"></security:http>
	<security:http pattern="/fonts/**" security="none"></security:http>
	<security:http pattern="/media/**" security="none"></security:http>
	<security:http pattern="/mobile/assets/**" security="none"></security:http>
	<security:http pattern="/mobile/*.html" security="none"></security:http>
	<security:http pattern="/mobile/bpm/*.html" security="none"></security:http>
	
	<security:http entry-point-ref="multipleAuthenticationLoginEntry">
		<security:csrf disabled="true"/>
		<security:headers>
			<security:frame-options policy="SAMEORIGIN"/>
		</security:headers>
		<security:remember-me key="rememberPrivateKey"/>
		<security:logout logout-url="/logout" success-handler-ref="oAuth2LogoutSuccessHandler"/> 
		<security:custom-filter  ref="aopFilter" position="FIRST" />
		<security:custom-filter  ref="xssFilter" before="PRE_AUTH_FILTER" />
		<security:custom-filter  ref="oauth2Filter" after="PRE_AUTH_FILTER" />
		<security:custom-filter  ref="csrfFilter" position="CSRF_FILTER" />
		<security:custom-filter  before="FILTER_SECURITY_INTERCEPTOR" ref="permissionFilter" />
		<security:access-denied-handler ref="htAccessDeniedHandler"/>
		<security:custom-filter position="SWITCH_USER_FILTER" ref="switchUserProcessingFilter"/>
		<security:custom-filter ref="concurrencyFilter" position="CONCURRENT_SESSION_FILTER"/>
		
		<security:session-management session-authentication-strategy-ref="sas">
		</security:session-management>
	</security:http>
	
	<bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl"/>
	
	<bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <constructor-arg name="sessionRegistry" ref="sessionRegistry"></constructor-arg>
        <constructor-arg name="expiredUrl" value="${oauth.internet}"></constructor-arg>
    </bean>
	
	<!--  -->
	<bean id="sas" class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
		<constructor-arg>
            <list>
                <bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
                    <constructor-arg ref="sessionRegistry" />
                    <property name="maximumSessions" value="1" />
                    <property name="exceptionIfMaximumExceeded" value="true" />
                </bean>
                <bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
                </bean>
                <bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
                    <constructor-arg ref="sessionRegistry" />
                </bean>
            </list>
        </constructor-arg>
	</bean>
	
	<bean id="oAuth2LogoutSuccessHandler" class="com.hotent.mini.web.security.OAuth2LogoutSuccessHandler" >
		<property name="logoutSuccessUrl" value="${oauth.internet}" />
	</bean>
	
	<bean id="oauth2Service" class="com.hotent.mini.web.service.impl.OAuth2ServiceImpl">
		<property name="oauth2BaseUrl" value="${oauth.baseUrl}" />
		<property name="oauth2Internet" value="${oauth.internet}" />
		<property name="clientId" value="${oauth.clientId}" />
		<property name="clientSecret" value="${oauth.clientSecret}" />
	</bean>
	
	<bean id="multipleAuthenticationLoginEntry" class="com.hotent.mini.web.security.OAuth2AuthenticationLoginEntry"/>  
    
    <bean id="oauth2Filter" class="com.hotent.mini.web.filter.OAuth2Filter"/>
	
	<!-- 拒绝访问的URL配置 -->
	<bean id="htAccessDeniedHandler" class="com.hotent.mini.web.security.HtAccessDeniedHandler">
		<property name="accessDeniedUrl" value="/commons/403.jsp"></property>
	</bean>
	<!-- 防止XSS注入 -->
	<bean id="xssFilter" class="com.hotent.mini.web.security.XssFilter" />
	<!-- 防止CSRF攻击 -->
	<bean id="csrfFilter" class="com.hotent.mini.web.security.CsrfFilter" />
	
	<!-- xss url 过滤控制-->
	<bean id="xssUrl" class="com.hotent.mini.web.security.RegMatchers">
		<property name="ingoreUrls">
			<list>
				<value>/login.*</value>
				<value>/service.*</value>
				<value>/form/form/save</value>
				<value>/flow/def/bpmnXml</value>
				<value>/flow/def/flexDefSave</value>
				<value>/form/form/preview</value>
				<value>/system/sysMsgTemplate/save</value>
				<value>form/dataTemplate/saveTemplate</value>
				<value>/WEB-INF/view/.*</value>
				<value>/error.*</value>
				<value>/flow/.*</value>
			</list>
		</property>
	</bean>
	<!-- 需要忽略的CSRF攻击的网站 -->
	<bean id="csrfUrl" class="com.hotent.mini.web.security.RegMatchers">
		<property name="ingoreUrls">
			<list>
				<value>/login.*</value>
				<value>http://www.jee-soft.cn/*</value>
				<value>http://www.hotent.com/*</value>
			</list>
		</property>
	</bean>
	
	<bean id="actionPageMap" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="mobile" value="/mobile/index.html"></entry>
			</map>
		</constructor-arg>
	</bean>
	
	<!-- 配置匿名的URL地址 -->
	<bean id="anonymousUrls" class="com.hotent.mini.web.security.RegMatchers">
		<property name="ingoreUrls">
			<list>
				<value>/service.*</value>
				<value>/login.*</value>
				<value>/AuthValidServlet</value>
			</list>
		</property>
	</bean>
	<!-- 将request,response 放到上下文 ，设置当前人，清除线程变量-->
	<bean id="aopFilter" class="com.hotent.mini.web.filter.AopFilter"></bean>
	 <!-- 获取用户对象信息 -->
	<bean id="userDetailsService" class="com.hotent.mini.web.security.UserDetailsServiceImpl" />
    
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider user-service-ref="userDetailsService">
			<security:password-encoder  ref="passwordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
	
	<!-- 授权判断 -->
	<bean id="permissionFilter" class="com.hotent.mini.web.security.PermissionFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="securityMetadataSource" ref="securityMetadataSource" />
	</bean>
	<!-- 访问决策器 -->
	<bean id="accessDecisionManager" class="com.hotent.mini.web.security.HtDecisionManager" />
	<!-- 获取URL 对应的角色 -->
	<bean id="securityMetadataSource" class="com.hotent.mini.web.security.HtSecurityMetadataSource" />
	<!-- 密码编码器 -->
	<bean id="passwordEncoder" class="com.hotent.mini.web.security.NoValidPasswordEncoder"></bean>
	<!-- 切换用户 -->
	<bean id="switchUserProcessingFilter" class="com.hotent.mini.web.security.HtSwitchUserFilter">
            <property name="userDetailsService" ref="userDetailsService" />
            <property name="switchUserUrl" value="/j_spring_security_switch_user" />
            <property name="exitUserUrl" value="/j_spring_security_exit_user" />
            <property name="targetUrl" value="/main/home" />
    </bean>
</beans>