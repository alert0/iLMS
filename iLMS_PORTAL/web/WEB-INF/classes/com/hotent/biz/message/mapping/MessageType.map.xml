<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotent.biz.message.model.MessageType">
	<resultMap id="MessageType" type="com.hotent.biz.message.model.MessageType">
		<id property="id" column="ID" jdbcType="VARCHAR"/>
		<result property="classificationCode" column="CLASSIFICATION_CODE" jdbcType="VARCHAR"/>
		<result property="createBy" column="CREATE_BY" jdbcType="VARCHAR"/>
		<result property="createTime" column="CREATE_TIME" jdbcType="TIMESTAMP"/>
		<result property="ispending" column="IS_PENDING" jdbcType="NUMERIC"/>
		<result property="pendingUserId" column="PENDING_USER_ID" jdbcType="VARCHAR"/>
		<result property="pendingUserName" column="PENDING_USER_NAME" jdbcType="VARCHAR"/>
	</resultMap>
	
	<insert id="create" parameterType="com.hotent.biz.message.model.MessageType">
		INSERT INTO biz_message_type
		(ID,CLASSIFICATION_CODE,CREATE_BY,CREATE_TIME,IS_PENDING,PENDING_USER_ID,PENDING_USER_NAME)
		VALUES 
		(#{id,jdbcType=VARCHAR}, #{classificationCode,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR},
		 #{createTime,jdbcType=TIMESTAMP},#{ispending,jdbcType=NUMERIC},#{pendingUserId,jdbcType=VARCHAR},#{pendingUserName,jdbcType=VARCHAR})
	</insert>
	
	<select id="get"   parameterType="java.lang.String" resultMap="MessageType">
		SELECT * FROM biz_message_type 
		WHERE 
		ID=#{id}
	</select>
		<select id="queryAll" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT biz_message_type.*,sys_user.FULLNAME_ FROM biz_message_type LEFT JOIN  sys_user  ON biz_message_type.CREATE_BY = sys_user.ID_
		<where>
			<if test="whereSql!=null">
				${whereSql}
			</if>
		</where>
		<if test="orderBySql!=null">
			ORDER BY ${orderBySql}
		</if>
		<if test="orderBySql==null">
			ORDER BY ID DESC
		</if>
	</select>
	<select id="query" parameterType="java.util.Map" resultMap="MessageType">
		SELECT * FROM biz_message_type
		<where>
			<if test="whereSql!=null">
				${whereSql}
			</if>
		</where>
		<if test="orderBySql!=null">
			ORDER BY ${orderBySql}
		</if>
		<if test="orderBySql==null">
			ORDER BY ID DESC
		</if>
	</select>
	
	<update id="update" parameterType="com.hotent.biz.message.model.MessageType">
		UPDATE biz_message_type SET
		CLASSIFICATION_CODE=#{classificationCode,jdbcType=VARCHAR},
		CREATE_BY=#{createBy,jdbcType=VARCHAR},
		CREATE_TIME=#{createTime,jdbcType=TIMESTAMP},
		IS_PENDING=#{ispending,jdbcType=NUMERIC},
		PENDING_USER_ID=#{pendingUserId,jdbcType=VARCHAR},
		PENDING_USER_NAME=#{pendingUserName,jdbcType=VARCHAR}
		WHERE
		ID=#{id}
	</update>
	
	<delete id="remove" parameterType="java.lang.String">
		DELETE FROM biz_message_type 
		WHERE
		ID=#{id}
	</delete>
	<select id="getByClassificationCode" parameterType="java.lang.String" resultMap="MessageType">
		SELECT * FROM biz_message_type WHERE CLASSIFICATION_CODE = #{classificationCode}
	</select>
	<select id="isExistCode" resultType="Integer" parameterType="java.util.Map">
	  SELECT count(*) amount FROM biz_message_type where CLASSIFICATION_CODE=#{classificationCode}
	  <if test="@Ognl@isNotEmpty(id)">  AND ID &lt;> #{id}  </if>
	</select>
</mapper>