<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanthink.sw.model.SwAnnounceModel">

	<!-- 分页查询数据 -->
    <select id="queryJisoAnnouncePage" parameterType="com.hanthink.sw.model.SwAnnounceModel" resultType="com.hanthink.sw.model.SwAnnounceModel">
               SELECT  A.NOTICE_ID       noticeId,
                       A.NOTICE_TITLE    noticeTitle,
                       A.NOTICE_CONTENT  content,
                       A.NOTICE_STATUS   noticeStatus,
                       TO_CHAR(A.CREATION_TIME, 'YYYY-MM-DD') creationTime,
                       TO_CHAR(A.NOTICE_END_TIME, 'YYYY-MM-DD') noticeEndTime,
                       A.IS_FEEDBACK     isFeedback,
                       A.FILE_NAME       fileName,
                       A.PUBLISH_USER    publishUser,
                       A.FEEDBACK_DAY    feedbackDay,
                       TO_CHAR(A.PUBLISH_TIME, 'YYYY-MM-DD') publishTime
                  FROM MM_SW_NOTICE A
                  WHERE 1=1
                  <if test="noticeTitle !=null and noticeTitle !='' ">
				  AND A.NOTICE_TITLE like CONCAT(#{noticeTitle}, '%')
				  </if>
    </select>
    
    <!-- 供应商反馈查看 -->
    <select id="get" parameterType="java.lang.String" resultType="com.hanthink.sw.model.SwAnnounceModel">
    			SELECT     A.SUPPLIER_NO     supplierNo,
					       B.SUPPLIER_NAME   supplierName,
					       A.VIEW_STATUS     viewStatus,
					       A.DOWNLOAD_STATUS downloadStatus,
					       A.RETURN_MSG      returnMsg
					  FROM MM_SW_NOTICE_VIEW A
					  LEFT JOIN MM_PUB_SUPPLIER B
					    ON A.SUPPLIER_NO = B.SUPPLIER_NO
					WHERE A.NOTICE_ID = #{noticeId}
    </select>
    
    <!-- 删除公告，从两张表中删除相关数据 -->
    <delete id="remove" parameterType="java.lang.String">
       		 DELETE FROM MM_SW_NOTICE WHERE NOTICE_ID = #{noticeId}
    </delete>
    <delete id="removeView" parameterType="java.lang.String">
    		 DELETE FROM MM_SW_NOTICE_VIEW A WHERE A.NOTICE_ID= #{noticeId}
    </delete>
    
    
    <!-- 新增时把数据写入公告表 -->
    <insert id="insertAnnounce" parameterType="com.hanthink.sw.model.SwAnnounceModel" useGeneratedKeys="true" keyProperty="noticeId" keyColumn="NOTICE_ID">
			 INSERT   INTO MM_SW_NOTICE
					  (NOTICE_ID,
					   FACTORY_CODE,
					   NOTICE_TITLE,
					   NOTICE_CONTENT,
					   NOTICE_END_TIME,
					   FILE_ID,
					   IS_FEEDBACK,
					   CREATION_USER,
                       CREATION_TIME)
			     VALUES(SEQ_MM_SW_NOTICE.NEXTVAL,
			           #{factoryCode,jdbcType=VARCHAR},
			           #{noticeTitle,jdbcType=VARCHAR},
			           #{noticeContent,jdbcType=VARCHAR},
			           to_date(#{noticeEndTime,jdbcType=VARCHAR},'yyyy-mm-dd'),
			           #{fileId,jdbcType=VARCHAR},
			           #{isFeedback,jdbcType=VARCHAR},
			           #{creationUser,jdbcType=VARCHAR},
			           SYSDATE)
    </insert>
    
    <!-- 新增时把数据写入供应商与公告关系表 -->
    <insert id="insertAnnGroup" parameterType="com.hanthink.sw.model.SwAnnounceModel">
			INSERT INTO   MM_SW_NOTICE_SUPGROUP
					       (NOTICE_ID, 
					        GROUP_ID, 
					        CREATION_USER, 
					        CREATION_TIME)
					 VALUES( #{noticeId,jdbcType=VARCHAR},
							 #{groupId,jdbcType=VARCHAR},
							 #{creationUser,jdbcType=VARCHAR},
							 SYSDATE)
    </insert>
    
    <!-- 点击修改公告，修改公告信息表中 数据 ,同时修改公告供应分组表信息（因要修改同一个公告id对应多个分组id所以用先删除在插入的方式达到修改表数据效果）-->
    <update id="updateNotice" parameterType="com.hanthink.sw.model.SwAnnounceModel">
         	 UPDATE MM_SW_NOTICE SET 
				       NOTICE_TITLE = #{noticeTitle,jdbcType=VARCHAR},
				       NOTICE_CONTENT =  #{noticeContent,jdbcType=VARCHAR},
				       NOTICE_END_TIME = to_date(#{noticeEndTime,jdbcType=VARCHAR},'yyyy-mm-dd'),
				       FILE_ID = #{fileId,jdbcType=VARCHAR},
				       IS_FEEDBACK = #{isFeedback,jdbcType=VARCHAR},
				       LAST_MODIFIED_USER = #{creationUser,jdbcType=VARCHAR},
				       LAST_MODIFIED_TIME = SYSDATE
				  WHERE NOTICE_ID= #{noticeId,jdbcType=VARCHAR}
    </update>
    <delete id="deleteNoticeSupGroup" parameterType="java.lang.String">
    		DELETE FROM MM_SW_NOTICE_SUPGROUP Z WHERE Z.NOTICE_ID=#{noticeId}
    </delete>
    <insert id="insertNoticeSupGroup" parameterType="com.hanthink.sw.model.SwAnnounceModel">
            INSERT INTO MM_SW_NOTICE_SUPGROUP(NOTICE_ID,GROUP_ID) 
                                       VALUES( #{noticeId,jdbcType=VARCHAR},
                                               #{groupId,jdbcType=VARCHAR})
    </insert>
    
    <!-- 点击发布，修改公告状态为发布 -->
    <update id="publishNotice" parameterType="com.hanthink.sw.model.SwAnnounceModel">
    		UPDATE MM_SW_NOTICE A SET A.NOTICE_STATUS=#{noticeStatus,jdbcType=VARCHAR} WHERE A.NOTICE_ID= #{noticeId,jdbcType=VARCHAR}
    </update>
    
    <!-- 点击发布，将数据写入公告供应商查看记录表中 -->
    <insert id="inserNoticeView" parameterType="com.hanthink.sw.model.SwAnnounceModel">
			 INSERT INTO MM_SW_NOTICE_VIEW(NOTICE_ID,
										   SUPPLIER_NO,
										   NOTICE_STATUS)
							(SELECT A.NOTICE_ID     noticeId,
							       C.SUPPLIER_NO   supplierNo,
							       A.NOTICE_STATUS noticeStatus
							  FROM MM_SW_NOTICE A
							  LEFT JOIN MM_SW_NOTICE_SUPGROUP B
							    ON A.NOTICE_ID = B.NOTICE_ID
							  LEFT JOIN MM_SW_SUP_GROUP_MEMBERS C
							    ON B.GROUP_ID = C.GROUP_ID
			WHERE A.NOTICE_ID = #{noticeId})
    </insert>
    
    <!--公告发布管理界面， 供应商反馈查看 -->
    <select id="queryJisoFeedbackPage" parameterType="com.hanthink.sw.model.SwAnnounceModel" resultType="com.hanthink.sw.model.SwAnnounceModel">
		    SELECT B.SUPPLIER_NO     supplierNo,
			       B.SUPPLIER_NAME   supplierName,
			       D.CODE_VALUE_NAME viewStatus,
			       E.CODE_VALUE_NAME downloadStatus,
			       A.RETURN_MSG      returnMsg
			  FROM MM_SW_NOTICE_VIEW A
			  LEFT JOIN MM_PUB_SUPPLIER B
			    ON A.SUPPLIER_NO = B.SUPPLIER_NO
			  LEFT JOIN MM_PUB_DATA_DICT D
			    ON A.VIEW_STATUS = D.CODE_VALUE
			   AND D.CODE_TYPE = 'SW_VIEW_STATUS'
			  LEFT JOIN MM_PUB_DATA_DICT E
			    ON A.DOWNLOAD_STATUS = E.CODE_VALUE
			   AND E.CODE_TYPE = 'SW_DOWNLOAD_STATUS'
			    WHERE A.NOTICE_ID=#{noticeId}  
    </select>
    
    <!-- 公告查看界面查询公告信息 -->
    <select id="viewAnnounceJisoPage" parameterType="com.hanthink.sw.model.SwAnnounceModel" resultType="com.hanthink.sw.model.SwAnnounceModel">
		    SELECT 
		       D.CODE_VALUE_NAME noticeStatus,
		       A.NOTICE_TITLE    noticeTitle,
		       A.NOTICE_CONTENT  noitceContent,
		       A.FILE_NAME       fileName,
		       A.PUBLISH_USER    publishUser,
		       A.NOTICE_END_TIME noticeEndTime
		  FROM MM_SW_NOTICE A
		  LEFT JOIN MM_SW_NOTICE_SUPGROUP C
		    ON A.NOTICE_ID = C.NOTICE_ID
		  LEFT JOIN MM_SW_NOTICE_VIEW B
		    ON A.NOTICE_ID = B.NOTICE_ID
		  LEFT JOIN MM_PUB_DATA_DICT D
		    ON B.NOTICE_STATUS = D.CODE_VALUE
		   AND D.CODE_TYPE = 'SW_VIEW_STATUS'
    </select>
    
    <!-- 公告查看界面反馈功能 -->
    <update id="updateNoticeView" parameterType="com.hanthink.sw.model.SwAnnounceModel">
            UPDATE MM_SW_NOTICE_VIEW A
			    SET A.NOTICE_STATUS = #{noticeStatus,jdbcType=VARCHAR}, 
			        A.RETURN_MSG = #{returnMsg,jdbcType=VARCHAR}
			  WHERE A.NOTICE_ID = #{noticeId}
			    AND A.SUPPLIER_NO = {supplierNo} 
    </update>

</mapper>