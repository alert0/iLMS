<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanthink.mp.model.ExcepOrderModel">

	<!-- 检查导入临时表数据 -->
	<parameterMap type="map" id="impCkParamMap">  
		<parameter property="uuid" jdbcType="VARCHAR" mode="IN"/>  
		<parameter property="userName" jdbcType="VARCHAR" mode="IN"/>  
		<parameter property="opeIp" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="errorFlag" jdbcType="VARCHAR" mode="OUT"/>  
		<parameter property="errorMsg" jdbcType="VARCHAR" mode="OUT"/>  
	</parameterMap> 
	
	<!-- 查询例外订购导入需求 -->
	<select id="queryExcepOrderForPage" parameterType="com.hanthink.mp.model.ExcepOrderModel" 
	resultType="com.hanthink.mp.model.ExcepOrderModel">
		SELECT A.ID,
			   A.PART_NO partNo,
			   A.SUP_FACTORY supFactory,
			   TO_CHAR(A.ARRIVE_DATE, 'YYYY-MM-DD HH24:MI:SS') arriveDateStr,
		       A.ORDER_NUM orderNum,
		       A.SUPPLIER_NO supplierNo,
		       A.FACTORY_CODE factoryCode,
		       A.STORAGE  storage,
		       B.ORDER_NO  orderNo,
	           D.PURCHASE_NO  purchaseNo,
	           C.ROW_NO  rowNo,
	           E.SUPPLIER_NAME  supplierName 
		 FROM MM_MP_EXCEP_ORDER_DEMAND A
		 LEFT JOIN MM_MP_EXC_OD_RELATION B
	     ON A.ID = B.DEMAND_ID
	     AND A.FACTORY_CODE = B.FACTORY_CODE
	     LEFT JOIN MM_MP_EXCEP_ORDER_DETAIL C
	     ON B.ORDER_NO = C.ORDER_NO
	     AND A.PART_NO = C.PART_NO
	     LEFT JOIN MM_MP_EXCEP_ORDER D
	     ON B.ORDER_NO = D.ORDER_NO
	     AND A.FACTORY_CODE = D.FACTORY_CODE
	     LEFT JOIN MM_PUB_SUPPLIER E
	     ON E.SUPPLIER_NO = A.SUPPLIER_NO
		 WHERE 1=1
	 		<if test="supplierNo!=null and supplierNo!='' ">
				AND A.SUPPLIER_NO = #{supplierNo}
			</if> 
			<if test="partNo!=null and partNo!='' ">
				AND A.PART_NO  LIKE CONCAT(#{partNo}, '%')
			</if>
			    AND A.FACTORY_CODE = #{factoryCode}
	 UNION ALL
	    SELECT A.ID,
			   A.PART_NO partNo,
			   A.SUP_FACTORY supFactory,
			   TO_CHAR(A.ARRIVE_DATE, 'YYYY-MM-DD HH24:MI:SS') arriveDateStr,
		       A.ORDER_NUM orderNum,
		       A.SUPPLIER_NO supplierNo,
		       A.FACTORY_CODE factoryCode,
		       A.STORAGE  storage,
		       B.ORDER_NO  orderNo,
	           D.PURCHASE_NO  purchaseNo,
	           C.ROW_NO  rowNo,
	           E.SUPPLIER_NAME  supplierName 
		 FROM MM_MP_EXCEP_ORDER_DEMAND_HIS A
		 LEFT JOIN MM_MP_EXC_OD_RELATION B
	     ON A.ID = B.DEMAND_ID
	     AND A.FACTORY_CODE = B.FACTORY_CODE
	     LEFT JOIN MM_MP_EXCEP_ORDER_DETAIL C
	     ON B.ORDER_NO = C.ORDER_NO
	     AND A.PART_NO = C.PART_NO
	     LEFT JOIN MM_MP_EXCEP_ORDER D
	     ON B.ORDER_NO = D.ORDER_NO
	     AND A.FACTORY_CODE = D.FACTORY_CODE
	     LEFT JOIN MM_PUB_SUPPLIER E
	     ON E.SUPPLIER_NO = A.SUPPLIER_NO
		 WHERE 1=1
	 		<if test="supplierNo!=null and supplierNo!='' ">
				AND A.SUPPLIER_NO = #{supplierNo}
			</if> 
			<if test="partNo!=null and partNo!='' ">
				AND A.PART_NO  LIKE CONCAT(#{partNo}, '%')
			</if>
			    AND A.FACTORY_CODE = #{factoryCode}
		ORDER BY 4
	</select>
	
	<!-- 根据IMP_UUID删除导入的临时例外订购需求数据 -->
	<delete id="deleteExcepImportTempDataByUUID" parameterType="java.lang.String">
		DELETE FROM MM_MP_EXCEP_ORDER_DEMAND_IMP A WHERE A.IMP_UUID = #{VALUE}
	</delete>
	
	<!-- 将EXCEL数据导入到例外订单需求临时表 -->
	<insert id="insertExcepImportTempData" parameterType="java.util.List">
		INSERT INTO MM_MP_EXCEP_ORDER_DEMAND_IMP
		(
		   SUPPLIER_NO,
		   SUP_FACTORY,
		   PART_NO,
		   ORDER_NUM,
		   ARRIVE_DATE,
		   FACTORY_CODE,
		   STORAGE,
		   IMP_UUID,
		   CHECK_RESULT,
		   CHECK_INFO,
		   CREATION_USER,
		   CREATION_TIME,
		   IMPORT_STATUS
		   ) 
		<foreach collection="list" item="item" index="index" separator=" UNION ALL ">
			SELECT 
		   #{item.supplierNo,jdbcType=VARCHAR},
		   #{item.supFactory,jdbcType=VARCHAR},
		   #{item.partNo,jdbcType=VARCHAR},
		   #{item.orderNum,jdbcType=VARCHAR},
		   to_date(#{item.arriveDateStr,jdbcType=VARCHAR}, 'yyyy-mm-dd hh24:mi:ss'),
		   #{item.factoryCode,jdbcType=VARCHAR},
		   #{item.storage,jdbcType=VARCHAR},
		   #{item.uuid,jdbcType=VARCHAR},
		   #{item.checkResult,jdbcType=VARCHAR},
		   #{item.checkInfo,jdbcType=VARCHAR},
		   #{item.createUser,jdbcType=VARCHAR},
		   SYSDATE,
		   #{item.importStatus,jdbcType=VARCHAR}
			FROM DUAL 
    	</foreach>
	</insert>
	 
	<!-- 导入例外订购需求校验 -->
	<select id="checkImportExcepData" parameterMap="impCkParamMap" statementType="CALLABLE">
		{CALL PKG_MP_CHECK.USP_MP_EXC_ORDER_CHECK(?, ?, ?,  ?,?)}
	</select>
	
	<!-- 查询导入的临时订购需求数据 -->
	<select id="queryImportExcepTempData" parameterType="java.util.Map" resultType="com.hanthink.mp.model.ExcepOrderModelImport">
			SELECT A.SUPPLIER_NO supplierNo,
		           A.SUP_FACTORY supFactory,
		           A.PART_NO partNo,
		           A.ORDER_NUM orderNum,
		           TO_CHAR(A.ARRIVE_DATE, 'YYYY-MM-DD HH24:MI:SS') arriveDateStr,
		           A.FACTORY_CODE factoryCode,
		           A.STORAGE  storage,
		           A.CHECK_RESULT checkResult,
		           A.CHECK_INFO checkInfo,
		           A.IMPORT_STATUS importStatus,
		           A.OPE_TYPE opeType,
		           B.CODE_VALUE_NAME codeValueNameB,
		           C.CODE_VALUE_NAME codeValueNameC
		        FROM MM_MP_EXCEP_ORDER_DEMAND_IMP A
		        LEFT JOIN MM_PUB_DATA_DICT B
			    ON A.CHECK_RESULT = B.CODE_VALUE
			    AND B.CODE_TYPE ='PUB_IMP_CK_RESULT'
			    AND B.FACTORY_CODE = A.FACTORY_CODE
			    LEFT JOIN MM_PUB_DATA_DICT C
			    ON A.IMPORT_STATUS = C.CODE_VALUE
			    AND C.CODE_TYPE ='PUB_IMP_STATUS'
			    AND C.FACTORY_CODE = A.FACTORY_CODE
		        WHERE A.IMP_UUID = #{uuid}
	</select>
	
	<!-- 导入之前先删除例外订购需求表中处理标识为未处理的数据 -->
	<delete id="deleteNotDealData" parameterType="java.util.Map">
		DELETE FROM MM_MP_EXCEP_ORDER_DEMAND A
		 WHERE A.FACTORY_CODE = #{factoryCode}
	</delete>
	
	<!-- 将临时例外订购需求数据导入正式表 -->
	<insert id="insertExcepImportData" parameterType="java.util.Map">
		INSERT INTO MM_MP_EXCEP_ORDER_DEMAND
		  (ID,
		   SUPPLIER_NO,
		   SUP_FACTORY,
		   PART_NO,
		   ORDER_NUM,
		   ARRIVE_DATE,
		   FACTORY_CODE,
		   STORAGE,
		   CREATION_TIME,
		   CREATION_USER,
		   USE,
		   DEMAND_DEPARTMENT,
		   DEMANDER,
		   CON_NUMBER,
		   OPT_USER,
		   OPT_TIME)
		  (SELECT PKG_PUB.USF_GET_SEQUENCE('SEQ_IMPORT_DATA_TEMP'),
		          A.SUPPLIER_NO,
		          A.SUP_FACTORY,
		          A.PART_NO,
		          SUM(A.ORDER_NUM),
		          TRUNC(A.ARRIVE_DATE),
		          A.FACTORY_CODE,
		          A.STORAGE,
		          SYSDATE,
		          MIN(A.CREATION_USER),
		          MIN(A.USE),
		          MIN(A.DEMAND_DEPARTMENT),
		          A.DEMANDER,
		          MIN(A.CON_NUMBER),
		          MIN(A.OPT_USER),
		          MIN(A.OPT_TIME)
		     FROM MM_MP_EXCEP_ORDER_DEMAND_IMP A
		    WHERE A.IMP_UUID = #{uuid, jdbcType = VARCHAR}
				      AND A.CHECK_RESULT = #{checkResult,jdbcType = VARCHAR}
				      AND A.IMPORT_STATUS = #{importStatus, jdbcType = VARCHAR}
				      AND A.OPE_TYPE = 'I'
		    GROUP BY A.SUP_FACTORY,
		             A.SUPPLIER_NO,
		             A.DEMANDER,
		             A.PART_NO,
		             TRUNC(A.ARRIVE_DATE),
		             A.FACTORY_CODE,
		             A.STORAGE)
	</insert>
	
	<!-- 导入成功更新导入状态 -->
	<update id="updateExcepImportDataImpStatus" parameterType="java.util.Map">
		UPDATE MM_MP_EXCEP_ORDER_DEMAND_IMP A
		   SET A.IMPORT_STATUS = #{IMPORT_STATUS_YES, jdbcType = VARCHAR}
		 WHERE A.IMP_UUID = #{uuid, jdbcType = VARCHAR}
		   AND A.CHECK_RESULT = #{checkResult,jdbcType = VARCHAR}
		   AND A.IMPORT_STATUS = #{importStatus, jdbcType = VARCHAR}
	</update>
	
	<!-- 查询临时表中的数据是否可以导入 -->
	<select id="queryExcepIsImportFlag" parameterType="java.lang.String" resultType="java.lang.String">
		WITH TEMPA AS
		 (SELECT COUNT(1) s
		    FROM MM_MP_EXCEP_ORDER_DEMAND_IMP A
		   WHERE A.CHECK_RESULT = 0
		     AND A.IMP_UUID = #{VALUE}),
		TEMPB AS
		 (SELECT COUNT(1) S
		    FROM MM_MP_EXCEP_ORDER_DEMAND_IMP B
		   WHERE B.IMP_UUID = #{VALUE})
		SELECT CASE
		         WHEN A.S >= B.S THEN
		          0
		         ELSE
		          1
		       END AS FLAG
		  FROM TEMPA A, TEMPB B
	</select>
	 
	<!-- 查询可导入数据 -->
	<select id="queryForInsertList" parameterType="java.util.Map" resultType="com.hanthink.mp.model.ExcepOrderModel">
		SELECT A.ID id
		FROM  MM_MP_EXCEP_ORDER_DEMAND_IMP A
		WHERE A.IMP_UUID = #{uuid}
			  AND A.IMPORT_STATUS = #{importStatus}
			  AND A.CHECK_RESULT = #{checkResult}
	</select>
	
</mapper>